{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "WebsiteSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "WebsiteCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "Environment": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the environment that the resource group creates (e.g. Dev, Test, Prod)"
      }
    },
    "StorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring"
    }
  },

  "variables": {
    "webSiteName": "[concat('photos-', toLower(parameters('Environment')), '-website')]",
    "hostingPlanName": "[concat('photos-', toLower(parameters('Environment')), '-webhosting')]",
    "uploadStorageName": "[concat('photos', toLower(parameters('Environment')))]",
    "functionsHostingPlanName": "[concat('photos-', toLower(parameters('Environment')), '-functionshosting')]",
    "jobsStorageName": "[concat('photosjobs', toLower(parameters('Environment')))]",
    "functionsName": "[concat('photos-', toLower(parameters('Environment')), '-functions')]"
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Website Hosting Plan"
      },
      "sku": {
        "name": "[parameters('WebsiteSku')]",
        "capacity": "[parameters('WebsiteCapacity')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
        "[resourceId('microsoft.insights/components', variables('webSiteName'))]"
      ],
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
          ],
          "tags": {
            "displayName": "WebsiteDeployment"
          },
          "properties": {
            "packageUri": "[concat(parameters('_artifactsLocation'), '/', 'Kopis.Photos.Web', '/', 'package.zip', parameters('_artifactsLocationSasToken'))]",
            "dbType": "None",
            "connectionString": "",
            "AppOffline": true,
            "setParameters": {
              "IIS Web Application Name": "[variables('webSiteName')]"
            }
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "appsettings",
          "type": "config",
          "tags": {
            "displayName": "WebsiteAppSettings"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', toLower(variables('websiteName')))]",
            "[resourceId('Microsoft.Storage/storageAccounts', toLower(variables('uploadStorageName')))]",
            "[concat('Microsoft.Web/sites/', variables('webSiteName'), '/Extensions/MSDeploy')]"
          ],
          "properties": {
            "Values:StorageConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('uploadStorageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('uploadStorageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
            "ApplicationInsights:InstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('webSiteName')), '2014-04-01').InstrumentationKey]"
          }
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Insights/components",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Website App Insights",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource"
      },
      "properties": {
        "applicationId": "[variables('webSiteName')]"
      }
    },
    {
      "name": "[variables('uploadStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('StorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "Photo Storage"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "name": "[variables('functionsHostingPlanName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Functions Hosting Plan"
      },
      "properties": {
        "name": "[variables('functionsHostingPlanName')]",
        "numberOfWorkers": 0
      },
      "dependsOn": [
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('jobsStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Jobs Storage"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[variables('functionsName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Functions"
      },
      "properties": {
        "name": "[variables('functionsName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionsHostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('jobsStorageName'), ';AccountKey=', listKeys(variables('jobsStorageName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('jobsStorageName'), ';AccountKey=', listKeys(variables('jobsStorageName'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "StorageConnectionString",
              "value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('uploadStorageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('uploadStorageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', variables('functionsName')), '2015-05-01').InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionsHostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('jobsStorageName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('uploadStorageName'))]",
        "[resourceId('microsoft.insights/components', variables('functionsName'))]"
      ],
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionsName'))]"
          ],
          "tags": {
            "displayName": "FunctionsDeployment"
          },
          "properties": {
            "packageUri": "[concat(parameters('_artifactsLocation'), '/', 'Kopis.Photos.Functions', '/', 'package.zip', parameters('_artifactsLocationSasToken'))]",
            "dbType": "None",
            "connectionString": "",
            "setParameters": {
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('functionsName')]",
      "type": "Microsoft.Insights/components",
      "kind": "web",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Functions App Insights",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionsName'))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('functionsName')]"
      }
    }
  ],
  "outputs": {}
}
